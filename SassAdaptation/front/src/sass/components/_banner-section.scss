@use 'sass:map';
@use '../utils/variables' as vars;
@use '../utils/mixins' as mix;

.banner {
    width: 100%;
    height: map.get(map.get(vars.$layout-heights, 'banner', 'height'), 'mobile');
    background-size: cover;
    background-position: center top;
    background-repeat: no-repeat;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    // Version mobile (par défaut)
    background-image: url('https://res.cloudinary.com/dpa2kakxx/image/upload/c_scale,w_640/v1736608654/site_montagne_v3/background/background2_uedp61.jpg');

    // Version tablette
    @include mix.respond-to('tablet') {
        background-image: url('https://res.cloudinary.com/dpa2kakxx/image/upload/c_scale,w_1024,g_north/v1736608654/site_montagne_v3/background/background2_uedp61.jpg');
        background-position: center top 10%;
        height: map.get(map.get(vars.$layout-heights, 'banner', 'height'), 'tablet');
    }

    // Version desktop
    @include mix.respond-to('desktop') {
        background-image: url('https://res.cloudinary.com/dpa2kakxx/image/upload/c_scale,w_1920,g_north/v1736608654/site_montagne_v3/background/background2_uedp61.jpg');
        background-position: top center;
        height: map.get(map.get(vars.$layout-heights, 'banner', 'height'), 'desktop');
    }

    // Contenu de la bannière
    h2, p {
        position: relative;
        z-index: 2;
        color: map.get(vars.$text-colors, 'light');
        text-align: center;
        opacity: 0;
        @include mix.transition(all, 0.3s, ease-in-out);
    }

    h2 {
        font-size: map.get(vars.$font-sizes, 'xlarge');
        margin-bottom: 1rem;
    }

    p {
        font-size: map.get(vars.$font-sizes, 'medium');
    }

    // Overlay sombre 
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        z-index: 1;
        opacity: 0;
        @include mix.transition(opacity, 0.3s, ease-in-out);
    }

    // État au hover
    &:hover {
        &::before {
            opacity: 1;
        }

        h2, p {
            opacity: 1;
            transform: translateY(0);
        }

        // décalage de l'apparition du texte
        p {
            transition-delay: 0.1s;
        }
    }
}