@use '../../utils/functions' as fn;
@use '../../utils/mixins' as mix;
@use '../../utils/variables' as vars;

.floating-input-container {
    position: relative;
    padding: fn.spacing('xs') 0;
    margin-bottom: fn.spacing('base');
    transition: margin-bottom 0.4s ease-out;

    // Input et textarea
    input, 
    textarea {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid var(--color-border, #ddd);
        border-radius: fn.radius('small');
        background-color: white;
        font-size: 1rem;
        transition: border-color 0.2s ease;
        
        // Pour que le placeholder soit invisible mais garde l'espace
        &::placeholder {
            color: transparent;
        }
        
        // État focus
        &:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 0 0 2px rgba(var(--color-primary-rgb, 52, 152, 219), 0.2);
        }
        
        // État disabled
        &:disabled {
            background-color: #f5f5f5;
            cursor: not-allowed;
        }
    }
    
    // Label flottant
    label {
        position: absolute;
        left: 1rem;
        top: calc(0.75rem + fn.spacing('xs'));
        color: var(--color-text-muted, #777);
        pointer-events: none;
        transform-origin: 0 0;
        transition: transform 0.2s ease, color 0.2s ease, background-color 0.2s ease;
        padding: 0 0.25rem;
        font-size: 1rem;
        background-color: transparent;
        z-index: 5;
    }
    
    // Animation du label lorsque l'input est focus ou rempli
    input:focus + label,
    input:not(:placeholder-shown) + label,
    textarea:focus + label,
    textarea:not(:placeholder-shown) + label {
        transform: translateY(-1.4rem) scale(0.85);
        color: var(--color-primary);
        background-color: white; // Effet de découpe sur la bordure
        z-index: 10; // Augmenter le z-index quand flottant
    }
    
    // Bordure stylisée
    .input-border {
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 0;
        height: 2px;
        background-color: var(--color-primary);
        transition: width 0.3s ease, left 0.3s ease;
    }
    
    // Effet de focus sur la bordure
    input:focus ~ .input-border,
    textarea:focus ~ .input-border {
        width: 100%;
        left: 0;
    }
    
    // Styles pour le bouton de toggle du mot de passe
    .password-toggle {
        position: absolute;
        top: 50%;
        right: 0.75rem;
        transform: translateY(-50%);
        background: none;
        border: none;
        padding: 0.25rem;
        cursor: pointer;
        color: var(--color-text-muted);
        display: flex;
        align-items: center;
        justify-content: center;
        transition: color 0.2s;
        z-index: 4;
        
        &:hover {
            color: var(--color-primary);
        }
        
        &:focus {
            outline: none;
        }
    }
    
    // État de focus pour tous les champs
    &.field-focused {
        .input-border {
            width: 100%;
            left: 0;
        }
        
        // Comportements par défaut pour tous les champs en focus
        margin-bottom: 1.8rem;
        transition: margin-bottom 0.3s ease-in;
        
        .field-requirements.visible {
            max-height: 1.5rem;
            opacity: 1;
        }
    }
    
    &.password-container {
        &.field-focused {
            margin-bottom: 3rem;
            
            .field-requirements.visible {
                max-height: 3rem;
            }
        }
    }
    
    &.phone-container {
        &.field-focused {
            margin-bottom: 1.1rem;
        }
    }
}

// Styles pour les exigences de champ
.field-requirements {
    position: absolute;
    left: 0;
    right: 0;
    top: 100%;
    height: auto;
    max-height: 0;
    opacity: 0;
    padding: 0;
    transition: max-height 0.4s ease-out, opacity 0.3s ease-out;
    overflow: hidden;
    z-index: 3;
    
    &.visible {
        opacity: 1;
        padding-top: 0.2rem;
        transition: max-height 0.3s ease-in, opacity 0.2s ease-in 0.05s;
    }
    
    h4 {
        display: none; // Masquer le titre
    }
    
    // Style de base pour tous les champs
    ul {
        margin: 0;
        padding: 0;
        list-style: none;
    }
    
    // Style spécifique pour mot de passe (wrapped)
    .password-container & ul {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    // Style pour les autres champs (une ligne)
    .floating-input-container:not(.password-container) & ul {
        display: flex;
        white-space: nowrap;
        overflow-x: auto;
        scrollbar-width: none;
        
        &::-webkit-scrollbar {
            display: none;
        }
        
        li {
            margin-right: 0.5rem;
            
            &:last-child {
                margin-right: 0;
            }
        }
    }
    
    // Style commun pour tous les items
    li {
        padding: 0.1rem 0.4rem;
        background: #f5f5f5;
        border-radius: fn.radius('small');
        transition: background 0.2s;
        font-size: 0.75rem;
        
        &.valid {
            background: rgba(46, 204, 113, 0.15);
            color: #27ae60;
            
            &::before {
                content: "✓ ";
            }
        }
        
        &.invalid {
            background: rgba(231, 76, 60, 0.15);
            color: #e74c3c;
            
            &::before {
                content: "✗ ";
            }
        }
    }
}

// Animation pour les messages de validation/erreur
.auth-message {
    padding: 0.75rem;
    margin: fn.spacing('sm') 0;
    border-radius: fn.radius('small');
    text-align: center;
    animation: slideDown 0.3s ease-in-out;
    
    &.error {
        background-color: rgba(231, 76, 60, 0.1);
        color: #c0392b;
        border-left: 3px solid #e74c3c;
    }
    
    &.success {
        background-color: rgba(46, 204, 113, 0.1);
        color: #27ae60;
        border-left: 3px solid #2ecc71;
    }
    
    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
}

// Pour masquer visuellement les éléments mais les garder accessibles
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

